<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Close.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAANtJREFUOE+1
        0wsNwkAQRdFKQAISkIAEJCABJ0hAAhKQgAQkIAHmNJlmdmmBhHCTF7p0vm9h+Aer0CF0DF1D59AptA99
        ZBOSdAkp4rwLSVbIu3VoFsG3kMQlvHuExDYYW9dvxjSRRg0qGzGxf+3imQ+J2KZZb9I2dA9JzNV0TjzX
        hmNAb04W6ZNhZe8muNsbk51zkoqznAk7V/fr2HWdxLrVk+meEwXr2Iq4paRvOGKkftc5xIjlQwMTjfru
        t2ASq/mcJc3Ja3UmXfO/Ub1YxH6KSCD++O5l7B8ZhifnzjSRjKEomwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnClock.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAOhJREFUOE+1
        ktENwiAQhjsCpQs4giM4giM4ghMYN+iDgT46gA8mLuAIfTQtTTqCK3g//dMoBa0mfsmFuwN+7oDsb6iD
        W2nrtto0e1XdFkzPA5ty664Yvdmuhxin31PYZi2La1X2iikPcphjmEZX3TG20AvLHMM0ue3OyrRLhiPI
        oS2GU1ByYdqNNu4m5e7gPxtymIMftudBj2KlrtxJTrLeD0zyF/p3bhuAIm6a4UdEoH552pQA+o7dx2wB
        Weg/EsOR7yqQH8lwZLZAiokAQBIlh88XMxyGQ7l1AOUO/376fKHFLvZHsuwBUc3BntgH2Z0AAAAASUVO
        RK5CYII=
</value>
  </data>
  <data name="Add.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAANZJREFUOE+1
        0g0NwjAQhuFJQAISkIAEJCABCThAAhKQgAQkIAEJcE+2W9auy0IIb/Jlu67306/r/sEmdApdQo/QbXg/
        hlbZhSTdQ4qIDyHJCvm2DTWx+RmSuIRv75C9BcbWtR5TbIIpYo0KVDZizXlQjb1Fs2uo7oSlAvYWDY2U
        5viYiY5FGWdXR371rz3TAo6zViBva8Q9t9zPxBqFHHvEwjcmSp6tG6l1ZYXbgdhePhTwgDF1wpR9iF+e
        TdIcIyokJpNYY+jsL2zBUAmKUf44s7F/pOs+uYE0+Ztjf+AAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAMQOAADEDgAAAAAAAAAA
        AAAAAAAAAAAAAFJOQ/9STkP/Uk5D/wAAAAAAAAAAUU1Dv1JOQ/9QUEAgUk5D/1JOQ/9STkP/AAAAAAAA
        AAAAAAAAAAAAAFJOQ/////////////////9STkP/Uk5D/1JOQ//f3tz/Uk5D/6inof//////qKeh/1JO
        Q/9QUEAQAAAAAFJOQ///////////////////////npuV////////////Uk5D////////////////////
        ////////Uk5D/wAAAABSTkP///////////9STkP/Uk5D/05WT/9STkP/Uk5D////////////////////
        //////////////////9STkP/Uk5D////////////Uk5D/wvO/P8Lzvz/C878/1JOQ///////////////
        ////////////////////////Uk5D/1JOQ///////Uk5D/wvO/P8Lzvz/C878/wvO/P9STkP/////////
        /////////////////////////////1JOQ/9ST0OvnpuV/1JOQ/8Lzvz/C878/wvO/P8Lzvz/Uk5D////
        //////////////////////////////////9STkP/AAAAAFJOQ/9STkP/C878/wvO/P8Lzvz/C878/1JO
        Q///////////////////////////////////////Uk5D/wAAAABSTkP//////1JOQ/8Lzvz/C878/wzK
        +/9STkP//////////////////////////////////////1JOQ/8AAAAAUk5D//////9STkP/Uk5D/1JO
        Q/9STkP/Uk5D//////////////////////////////////////9STkP/AAAAAFJOQ///////////////
        /////////////1JOQ///////////////////////////////////////AAAAAAAAAABSTkP/////////
        /////////////1JOQ/8AAAAAUk5D////////////////////////////Uk5D/wAAAAAAAAAAUk5D////
        //////////////////9STkP/AAAAAFJOQ////////////////////////////1JOQ/8AAAAAAAAAAAAA
        AABSTkP///////////9STkP/AAAAAAAAAAAAAAAAUk5D/////////////////1JOQ/8AAAAAAAAAAAAA
        AAAAAAAAAAAAAFJOQ/9STkP/AAAAAAAAAAAAAAAAAAAAAFJOQ//JyMT//////6inof9STkP/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUk5D/1JOQ/9STkP/AAAAAAAA
        AAAAAAAAx0cAAIADAAAAAQAAAAAAAAAAAAAAAAAAgAAAAIAAAACAAAAAgAAAAIABAACBAQAAgQEAAMOD
        AADngwAA/8cAAA==
</value>
  </data>
</root>